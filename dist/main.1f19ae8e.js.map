{"version":3,"sources":["main.js"],"names":["str","regexp1","RegExp","console","log","match","test","regexp2","regexp3","text","replace","regexp4"],"mappings":"AAAA,IAAMA,GAAG,kMAAT;AASA,IAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,IAAX,EAAiB,IAAjB,CAAhB;AAEAC,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAUJ,OAAV,CAAZ;AAEAE,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACK,IAAR,CAAa,IAAb,CAAZ,GAAiC;;AAEjC,IAAMC,OAAO,GAAG,KAAhB;AAEAJ,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAUE,OAAV,CAAZ;AAEA,IAAMC,OAAO,GAAG,OAAhB;AAEAL,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAUG,OAAV,CAAZ;AAEA,IAAMC,IAAI,GAAGT,GAAG,CAACU,OAAJ,CAAYT,OAAZ,EAAqB,OAArB,CAAb;AAEAE,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAEA,IAAME,OAAO,GAAG,OAAhB,EAAyB;;AAEzBR,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAUM,OAAV,CAAZ;AAEAR,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,OAAV,CAAZ,GAAiC;;AACjCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,MAAV,CAAZ,GAAgC;;AAEhCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,KAAV,CAAZ,GAA+B;;AAC/BF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,MAAV,CAAZ,GAAgC;;AAEhCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,OAAV,CAAZ,GAAiC;;AACjCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,SAAV,CAAZ,GAAmC;;AAEnCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,UAAV,CAAZ,GAAoC;;AAEpCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,OAAV,CAAZ,GAAiC;;AACjCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,SAAV,CAAZ,GAAmC;;AAEnCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,WAAV,CAAZ,GAAqC;;AACrCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,eAAV,CAAZ,GAAyC;;AACzCF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACU,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAZ,GAAoC;;AAEpCP,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,cAAV,CAAZ;AACAF,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,KAAJ,CAAU,iBAAV,CAAZ","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const str = ` HA ha Ha hA,\r\nmy name is kim, yes it is my last name 'kim',\r\nthe The email is a kimdks12@gmail.com\r\nhttp://www.naver.com\r\nhttps://daum.net\r\nThe hoop 010-1234-5678\r\nfox is a dog\r\nnnnnmmmmmm`;\r\n\r\nconst regexp1 = new RegExp(\"ha\", \"gi\");\r\n\r\nconsole.log(str.match(regexp1));\r\n\r\nconsole.log(regexp1.test(\"ha\")); // true\r\n\r\nconst regexp2 = /the/;\r\n\r\nconsole.log(str.match(regexp2));\r\n\r\nconst regexp3 = /the/gi;\r\n\r\nconsole.log(str.match(regexp3));\r\n\r\nconst text = str.replace(regexp1, \"hello\");\r\n\r\nconsole.log(text);\r\n\r\nconst regexp4 = /\\,$/gm; // g옵션이 있어야 2개, 없으면 1개\r\n\r\nconsole.log(str.match(regexp4));\r\n\r\nconsole.log(str.match(/^t/gim)); // the The\r\nconsole.log(str.match(/^T/gm)); // The\r\n\r\nconsole.log(str.match(/m$/g)); // 문자열전체를 한문자로 보기때문에\r\nconsole.log(str.match(/m$/gm)); // [m, m]\r\n\r\nconsole.log(str.match(/h..p/g)); // [http, http, hoop]\r\nconsole.log(str.match(/https?/g)); // [http, https]\r\n\r\nconsole.log(str.match(/fox|dog/g)); // [dog, fox]\r\n\r\nconsole.log(str.match(/n{3}/g)); // ['nnn']\r\nconsole.log(str.match(/m{3,5}/g)); // ['mmmmm']\r\n\r\nconsole.log(str.match(/\\w{2,3}/gi)); // Array(46) 두글자씩 쪼개서\r\nconsole.log(str.match(/\\b\\w{2,3}\\b/gi)); // \\b 숫자와 알파벳이 아닌 글자로 경계를 만들어낸다\r\nconsole.log(str.replace(/\\s/, \"\")); // 공백제거\r\n\r\nconsole.log(str.match(/.{1,}(?=@)/gi));\r\nconsole.log(str.match(/(?<=@).{1, }/gim));\r\n"]}